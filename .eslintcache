[{"/Users/samueltrahan/dev-libre/src/index.js":"1","/Users/samueltrahan/dev-libre/src/App.js":"2","/Users/samueltrahan/dev-libre/src/components/YouTube/YouTube.js":"3","/Users/samueltrahan/dev-libre/src/components/MainVideo/MainVideo.js":"4","/Users/samueltrahan/dev-libre/src/components/NavBar/NavBar.js":"5","/Users/samueltrahan/dev-libre/src/components/Twitter/Twitter.js":"6","/Users/samueltrahan/dev-libre/src/components/YouTube/YouTubeVideos.js":"7","/Users/samueltrahan/dev-libre/src/components/Reddit/Reddit.js":"8","/Users/samueltrahan/dev-libre/src/components/Reddit/Articles.js":"9","/Users/samueltrahan/dev-libre/src/components/SideBar/SideBar.js":"10"},{"size":145,"mtime":1609433442453,"results":"11","hashOfConfig":"12"},{"size":2261,"mtime":1610384820515,"results":"13","hashOfConfig":"12"},{"size":366,"mtime":1609450508105,"results":"14","hashOfConfig":"12"},{"size":1100,"mtime":1609450508097,"results":"15","hashOfConfig":"12"},{"size":1053,"mtime":1610378103980,"results":"16","hashOfConfig":"12"},{"size":413,"mtime":1610304843159,"results":"17","hashOfConfig":"12"},{"size":300,"mtime":1609450508107,"results":"18","hashOfConfig":"12"},{"size":3433,"mtime":1610378103981,"results":"19","hashOfConfig":"12"},{"size":399,"mtime":1609959200802,"results":"20","hashOfConfig":"12"},{"size":3720,"mtime":1610381467202,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1ledx63",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Users/samueltrahan/dev-libre/src/index.js",[],["44","45"],"/Users/samueltrahan/dev-libre/src/App.js",["46"],"/Users/samueltrahan/dev-libre/src/components/YouTube/YouTube.js",[],"/Users/samueltrahan/dev-libre/src/components/MainVideo/MainVideo.js",[],"/Users/samueltrahan/dev-libre/src/components/NavBar/NavBar.js",[],"/Users/samueltrahan/dev-libre/src/components/Twitter/Twitter.js",[],"/Users/samueltrahan/dev-libre/src/components/YouTube/YouTubeVideos.js",[],"/Users/samueltrahan/dev-libre/src/components/Reddit/Reddit.js",["47"],"import React, {useState, useEffect} from 'react';\nimport './Reddit.css';\nimport Articles from './Articles';\n\nimport jsIcon from \"../../Assets/subred_js.png\";\nimport reactIcon from \"../../Assets/subred_react.png\";\nimport techIcon from \"../../Assets/subred_tech.png\";\nimport webdevIcon from \"../../Assets/subred_webdev.png\";\nimport pythonIcon from '../../Assets/subred_python.png';\nimport nodeIcon from '../../Assets/subred_node.png';\nimport otherIcon from \"../../Assets/subred_other.webp\";\n\nexport default function Reddit({programmingLanguage}) {\n    const [articles, setArticle] = useState();\n    const [subReddits, setSubReddits] = useState(\"webdev\")\n    \n\n    useEffect(() => {\n        fetch(`https://www.reddit.com/r/${subReddits}.json?&limit=4`)\n        .then(res => {\n            if(res.status !== 200) {\n                console.log(\"Error\")\n                return;\n            }\n        res.json().then((response) => {\n            setArticle(response.data.children)\n        })\n        })\n    }, [subReddits])\n\n\n    const getArticles = articles ? articles.map((article) => \n    <Articles  article={article.data.title} link={article.data.permalink} subReddit={article.data.subreddit} key={article.data.title} />      \n) : <p>Loading....</p>\n\n\nlet subredIcon = subReddits === \"javascript\" ? jsIcon : subReddits === \"reactjs\" ? reactIcon : subReddits === \"python\" ? pythonIcon : subReddits === \"node\" ? nodeIcon  : subReddits === \"technology\" ? techIcon : subReddits === \"webdev\" ? webdevIcon : otherIcon;\n\nconst handleChange = (e) => {\n    setSubReddits(e.target.value)\n}\n\n\n    return (\n        <div className=\"reddit\">\n            <h1 className=\"reddit-logo\"><i className=\"reddit-logo fab fa-reddit-alien fa-2x\"></i>subreddits</h1>\n              <form >\n                <select \n                    onChange={handleChange}\n                    name=\"dropdown\"\n                    style={{display: \"block\"}}\n                    value={subReddits}\n                    className=\"dropdown-form\"\n                >\n                    <option className=\"subreddit-option\" value=\"\"></option>\n                    <option className=\"subreddit-option\" value=\"webdev\">Web Dev</option>\n                    <option className=\"subreddit-option\" value=\"reactjs\">React JS</option>\n                    <option className=\"subreddit-option\" value=\"python\">Python</option>\n                    <option className=\"subreddit-option\" value=\"node\">Node.js</option>\n                    <option className=\"subreddit-option\" value=\"softwareengineering\">Software Engineering</option>\n                    <option className=\"subreddit-option\" value=\"javascript\">JavaScript</option>\n                    <option className=\"subreddit-option\" value=\"technology\">Technology</option>\n                </select>\n              </form>\n                <img src={subredIcon} alt=\"subreddit icon\" className=\"subreddit-icon\"></img>\n              {getArticles}\n        </div>\n    )\n}\n","/Users/samueltrahan/dev-libre/src/components/Reddit/Articles.js",[],"/Users/samueltrahan/dev-libre/src/components/SideBar/SideBar.js",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":41,"column":8,"nodeType":"54","endLine":41,"endColumn":18,"suggestions":"55"},{"ruleId":"52","severity":1,"message":"56","line":43,"column":8,"nodeType":"54","endLine":43,"endColumn":41,"suggestions":"57"},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchLanguageVideos' and 'fetchVideos'. Either include them or remove the dependency array.","ArrayExpression",["60"],"React Hook useEffect has a missing dependency: 'setTheSubReddits'. Either include it or remove the dependency array.",["61"],"no-global-assign","no-unsafe-negation",{"desc":"62","fix":"63"},{"desc":"64","fix":"65"},"Update the dependencies array to be: [fetchLanguageVideos, fetchVideos, youtuber]",{"range":"66","text":"67"},"Update the dependencies array to be: [subReddits, programmingLanguage, setTheSubReddits]",{"range":"68","text":"69"},[1069,1079],"[fetchLanguageVideos, fetchVideos, youtuber]",[1470,1503],"[subReddits, programmingLanguage, setTheSubReddits]"]